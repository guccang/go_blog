<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>数据迁移工具</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        .migration-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .header {
            text-align: center;
            margin-bottom: 40px;
            padding-bottom: 20px;
            border-bottom: 2px solid #e0e0e0;
        }
        .header h1 {
            color: #333;
            margin-bottom: 10px;
        }
        .header p {
            color: #666;
            font-size: 16px;
        }
        .action-section {
            display: flex;
            gap: 30px;
            margin-bottom: 40px;
        }
        .action-card {
            flex: 1;
            padding: 30px;
            border: 2px solid #e0e0e0;
            border-radius: 12px;
            text-align: center;
            background: #fafafa;
            transition: all 0.3s ease;
        }
        .action-card:hover {
            border-color: #007bff;
            background: #f0f8ff;
            transform: translateY(-2px);
        }
        .action-card h3 {
            color: #333;
            margin-bottom: 15px;
            font-size: 20px;
        }
        .action-card p {
            color: #666;
            margin-bottom: 20px;
            line-height: 1.5;
        }
        .btn {
            padding: 12px 30px;
            font-size: 16px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
        }
        .btn-export {
            background: #28a745;
            color: white;
        }
        .btn-export:hover {
            background: #218838;
            transform: translateY(-1px);
        }
        .btn-import {
            background: #007bff;
            color: white;
        }
        .btn-import:hover {
            background: #0056b3;
            transform: translateY(-1px);
        }
        .btn-back {
            background: #6c757d;
            color: white;
            margin-top: 20px;
        }
        .btn-back:hover {
            background: #545b62;
        }
        .status-area {
            margin-top: 30px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 8px;
            min-height: 100px;
        }
        .status-message {
            padding: 12px;
            border-radius: 6px;
            margin-bottom: 10px;
        }
        .status-success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .status-error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .status-info {
            background: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }
        .file-input-container {
            margin-top: 20px;
        }
        .file-input {
            display: none;
        }
        .file-input-label {
            display: inline-block;
            padding: 8px 16px;
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            cursor: pointer;
            margin-bottom: 10px;
        }
        .file-input-label:hover {
            background: #e9ecef;
        }
        .progress-bar {
            width: 100%;
            height: 6px;
            background: #e0e0e0;
            border-radius: 3px;
            overflow: hidden;
            margin-top: 10px;
        }
        .progress-fill {
            height: 100%;
            background: #007bff;
            transition: width 0.3s ease;
            width: 0%;
        }
        .icon {
            font-size: 48px;
            margin-bottom: 20px;
            color: #007bff;
        }
        .export-icon {
            color: #28a745;
        }
        .import-icon {
            color: #007bff;
        }
    </style>
</head>
<body>
    <div class="migration-container">
        <div class="header">
            <h1><i class="fas fa-exchange-alt"></i> 博客数据迁移工具</h1>
            <p>导出和导入博客元数据，不包含内容，用于系统迁移和备份</p>
        </div>

        <div class="action-section">
            <div class="action-card">
                <div class="icon export-icon">
                    <i class="fas fa-download"></i>
                </div>
                <h3>导出博客数据</h3>
                <p>导出所有博客的元数据信息，包括标题、创建/修改/访问时间、访问次数、标签和评论信息。不包含博客内容。</p>
                <button class="btn btn-export" onclick="exportBlogData()">
                    <i class="fas fa-download"></i> 开始导出
                </button>
            </div>

            <div class="action-card">
                <div class="icon import-icon">
                    <i class="fas fa-upload"></i>
                </div>
                <h3>导入博客数据</h3>
                <p>从sys_blog_exdata.md文件导入博客元数据，更新现有博客的时间、访问次数、标签等信息。不会修改博客内容。</p>
                <div class="file-input-container">
                    <label for="importFile" class="file-input-label">
                        <i class="fas fa-file"></i> 选择文件
                    </label>
                    <input type="file" id="importFile" class="file-input" accept=".md" onchange="showFileName()">
                    <div id="fileName" style="font-size: 14px; color: #666; margin-top: 5px;"></div>
                </div>
                <button class="btn btn-import" onclick="importBlogData()">
                    <i class="fas fa-upload"></i> 开始导入
                </button>
            </div>
        </div>

        <div class="status-area">
            <h4>操作状态</h4>
            <div id="statusContainer">
                <div class="status-message status-info">
                    请选择需要执行的操作
                </div>
            </div>
            <div id="progressContainer" style="display: none;">
                <div class="progress-bar">
                    <div class="progress-fill" id="progressFill"></div>
                </div>
                <div id="progressText" style="text-align: center; margin-top: 5px; font-size: 14px;"></div>
            </div>
        </div>

        <div style="text-align: center;">
            <button class="btn btn-back" onclick="goBack()">
                <i class="fas fa-arrow-left"></i> 返回
            </button>
        </div>
    </div>

    <script>
        // 显示选择的文件名
        function showFileName() {
            const fileInput = document.getElementById('importFile');
            const fileName = document.getElementById('fileName');
            if (fileInput.files.length > 0) {
                fileName.textContent = '已选择文件: ' + fileInput.files[0].name;
            } else {
                fileName.textContent = '';
            }
        }

        // 更新状态信息
        function updateStatus(message, type = 'info') {
            const statusContainer = document.getElementById('statusContainer');
            statusContainer.innerHTML = `<div class="status-message status-${type}">${message}</div>`;
        }

        // 显示进度条
        function showProgress(percent, text) {
            const progressContainer = document.getElementById('progressContainer');
            const progressFill = document.getElementById('progressFill');
            const progressText = document.getElementById('progressText');
            
            progressContainer.style.display = 'block';
            progressFill.style.width = percent + '%';
            progressText.textContent = text;
        }

        // 隐藏进度条
        function hideProgress() {
            const progressContainer = document.getElementById('progressContainer');
            progressContainer.style.display = 'none';
        }

        // 导出博客数据
        async function exportBlogData() {
            try {
                updateStatus('正在导出博客数据...', 'info');
                showProgress(0, '准备导出...');

                const response = await fetch('/migration/export', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (!response.ok) {
                    throw new Error(`导出失败: ${response.status} ${response.statusText}`);
                }

                showProgress(50, '正在生成文件...');

                const blob = await response.blob();
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'sys_blog_exdata.md';
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);
                document.body.removeChild(a);

                showProgress(100, '导出完成');
                updateStatus('博客数据导出成功! 文件已保存为 sys_blog_exdata.md', 'success');
                
                setTimeout(() => {
                    hideProgress();
                }, 2000);

            } catch (error) {
                console.error('导出错误:', error);
                updateStatus('导出失败: ' + error.message, 'error');
                hideProgress();
            }
        }

        // 导入博客数据
        async function importBlogData() {
            const fileInput = document.getElementById('importFile');
            
            if (!fileInput.files.length) {
                updateStatus('请先选择要导入的文件', 'error');
                return;
            }

            const file = fileInput.files[0];
            if (!file.name.endsWith('.md')) {
                updateStatus('请选择.md格式的文件', 'error');
                return;
            }

            try {
                updateStatus('正在导入博客数据...', 'info');
                showProgress(0, '正在读取文件...');

                const formData = new FormData();
                formData.append('file', file);

                showProgress(30, '正在上传文件...');

                const response = await fetch('/migration/import', {
                    method: 'POST',
                    body: formData
                });

                showProgress(70, '正在处理数据...');

                const result = await response.text();

                if (!response.ok) {
                    throw new Error(result);
                }

                showProgress(100, '导入完成');
                updateStatus('博客数据导入成功! ' + result, 'success');
                
                setTimeout(() => {
                    hideProgress();
                }, 2000);

            } catch (error) {
                console.error('导入错误:', error);
                updateStatus('导入失败: ' + error.message, 'error');
                hideProgress();
            }
        }

        // 返回上一页
        function goBack() {
            window.history.back();
        }
    </script>
</body>
</html>