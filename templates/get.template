<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GUCCANG/GET</title>
    <link rel="stylesheet" href="/css/get.css">
</head>
<body id="body" class="th_black">
    <!-- Sidebar -->
	<div id="sidebar-container" class="sidebar-container">
		<div id="sidebar" class="sidebar">
            <a href="/main">
                <div class="img-cycle">G</div>
            </a>
            <a href="/main" style="font-size: 24px;">主页</a>
			<div class="separator"></div>
            <h2 id="title">{{.TITLE}}</h2>
			<div class="separator"></div>
            <p id="ctime">{{.CTIME}}</p>
			<div class="separator"></div>
            <label for="tags">标签</label>
			<input id="tags" type="text" name="tags" value="{{.TAGS}}">
			<div class="separator"></div>
			
			<label>📋 博客权限设置
				<button type="button" onclick="PermissionManager.showHelp()" style="margin-left: 5px; font-size: 12px; padding: 2px 6px; background: #444; color: #fff; border: 1px solid #666; border-radius: 3px; cursor: pointer;">?</button>
			</label>
			
			<!-- 基础权限类型 -->
			<div class="permission-section">
				<label class="section-title">基础权限</label>
				<label class="custom-radio">
					<input class="radio-left" type="radio" name="base_auth_type" value="private" 
						{{ if .IS_PRIVATE }}checked{{ end }}>
					<span class="radio-btn"><i class="checkmark"></i></span>
					<span class="radio-label">🔒 私有</span>
				</label>
				<label class="custom-radio">
					<input class="radio-left" type="radio" name="base_auth_type" value="public"
						{{ if .IS_PUBLIC }}checked{{ end }}>
					<span class="radio-btn"><i class="checkmark"></i></span>
					<span class="radio-label">🌐 公开</span>
				</label>
			</div>

			<!-- 特殊权限选项 -->
			<div class="permission-section">
				<label class="section-title">特殊权限</label>
				
				<label class="custom-checkbox">
					<input type="checkbox" name="diary_permission" id="diary_permission"
						{{ if .IS_DIARY }}checked{{ end }}>
					<span class="checkbox-btn"><i class="checkmark"></i></span>
					<span class="checkbox-label">📔 日记权限</span>
				</label>
				<small class="permission-hint">需要额外密码验证</small>
				
				<label class="custom-checkbox">
					<input type="checkbox" name="cooperation_permission" id="cooperation_permission"
						{{ if .IS_COOPERATION }}checked{{ end }}>
					<span class="checkbox-btn"><i class="checkmark"></i></span>
					<span class="checkbox-label">🤝 协作权限</span>
				</label>
				<small class="permission-hint">允许协作用户访问</small>
				
				<label class="custom-checkbox">
					<input type="checkbox" name="encrypt_permission" id="encrypt_permission"
						{{ if .IS_ENCRYPTED }}checked{{ end }}>
					<span class="checkbox-btn"><i class="checkmark"></i></span>
					<span class="checkbox-label">🔐 内容加密</span>
				</label>
				<small class="permission-hint">使用AES加密保护内容</small>
			</div>
			
			<div class="separator"></div>
			<div style="margin-top: auto;" id="encrypt-section-edit">
				<label for="encrypt-password" id="encrypt-password-label">🔐 加密密码</label>
				<input id="encrypt-password" type="password" name="encrypt-password" placeholder="设置加密密码..." 
					value="">
				<small class="encrypt-hint" id="encrypt-password-hint">💡 启用"内容加密"权限时必须设置密码</small>

			</div>
			<div class="separator"></div>
            <button id="delete-button" class="bottom-button" onclick="onDelete()">删除</button>
		</div>
        <div class="bubble" id="bubble">&#9776;</div>
	</div>

    <!-- Main Content -->
	<div class="container">
		<div class="buttons-container">
		<button id="toggle-button" class="right-button" type="button" onclick="onEditor()">编辑</button>
		</div>
        
		<div class="editor-container">
			<textarea id="editor-inner" class="hide th_black" name="content" wrap="hard">{{.CONTENT}}</textarea>
			<div id="md" class="md"></div>
		</div>
        
		<div class="bottom-container">
		{{ if or (eq "aes" .ENCRYPT) .IS_ENCRYPTED }}
			<div class="decrypt-container">
				<label for="decrypt-password" style="display: block; margin-bottom: 5px; font-size: 14px; color: #e0e0e0;">🔓 解密密码</label>
				<input id="decrypt-password" type="password" name="decrypt-password" placeholder="输入解密密码查看内容">
				<button id="decrypt-button" class="decrypt-btn" type="button" onclick="onDecrypt()">🔓 解密内容</button>
				<small style="display: block; margin-top: 5px; font-size: 11px; color: #888;">输入正确的解密密码来查看博客内容</small>
			</div>
		{{end}}
			<button id="editor-button" class="bottom-button" onclick="submitFirst()">保存修改</button>
		</div>

		<div class="comments-section">
			<div class="comments-header">
				<h3 class="comments-title">💬 评论区</h3>
				<button id="comment-show" class="comments-toggle-btn expanded" onclick="onShowComment()">
					<span id="toggle-text">收起评论</span>
					<span id="toggle-icon">▲</span>
				</button>
			</div>
			
			<div id="comments-container">
				<style>
					/* 确保评论表单输入框可见和可交互 */
					.comment-form input,
					.comment-form textarea {
						pointer-events: auto !important;
						user-select: text !important;
						-webkit-user-select: text !important;
						-moz-user-select: text !important;
					}
				</style>
				<!-- 评论列表 -->
				<div id="comments" class="comments-list">
					{{if .COMMENTS}}
						{{range .COMMENTS}}
						<div class="comment-card">
							<div class="comment-header">
								<div class="comment-author">
									<div class="author-avatar">{{slice .OWNER 0 1}}</div>
									<div class="author-info">
										<div class="author-name">{{.OWNER}}</div>
										{{if .MAIL}}<div class="author-email">{{.MAIL}}</div>{{end}}
									</div>
								</div>
								<div class="comment-meta">
									<span class="comment-time">{{.CTIME}}</span>
									<span class="comment-index">#{{.IDX}}</span>
								</div>
							</div>
							<div class="comment-content">
								<p>{{.MSG}}</p>
							</div>
						</div>
						{{end}}
					{{else}}
						<div class="no-comments">
							<div class="no-comments-icon">💭</div>
							<p>还没有评论，来发表第一条评论吧！</p>
						</div>
					{{end}}
				</div>

				<!-- 发表评论 -->
				<div id="div-comment" class="comment-form-container">
					<h4 class="comment-form-title">✍️ 发表评论</h4>
					<form class="comment-form" onsubmit="return false;">
						<div class="form-row">
							<div class="form-group">
								<label for="input-owner">用户名 *</label>
								<input id="input-owner" type="text" placeholder="请输入您的用户名" required>
								<small id="username-hint" class="form-hint">💡 用户名将作为您的身份标识</small>
							</div>
							<div class="form-group">
								<label for="input-mail">邮箱</label>
								<input id="input-mail" type="email" placeholder="请输入邮箱（可选）">
							</div>
						</div>
						<div class="form-group">
							<label for="input-pwd">身份密码</label>
							<input id="input-pwd" type="password" placeholder="用于确认您的身份">
							<small class="form-hint">💡 已注册用户名必须输入正确密码才能评论</small>
						</div>
						<div class="form-group">
							<label for="input-comment">评论内容 *</label>
							<textarea id="input-comment" rows="4" placeholder="请输入您的评论内容..." required></textarea>
							<div class="comment-input-footer">
								<small class="form-hint">支持换行，请文明发言</small>
								<span class="char-count"><span id="char-counter">0</span>/500</span>
							</div>
						</div>
						<div class="form-actions">
							<button id="commit-comment" type="button" onclick="onCommitComment()" class="submit-btn">
								<span class="btn-icon">📝</span>
								<span class="btn-text">发表评论</span>
							</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>

    <!-- Toast Container -->
    <div class="toast-container" id="toast-container"></div>

	<script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js"></script>
	<script src="/js/vim/vim.min.js"></script>
	<script src="/js/marked/marked.min.js"></script>
	<script src="/js/editor.js"></script>
	<script src="/js/utils.js"></script>
	<script src="/js/permissions.js"></script>
	<script src="/js/get.js"></script>
	
	<!-- 关键字高亮脚本 -->
	<script>
		function highlightKeywords() {
			// 从URL参数中获取highlight关键字
			const urlParams = new URLSearchParams(window.location.search);
			const highlight = urlParams.get('highlight');
			
			if (!highlight) return;
			
			// 对关键字进行URL解码
			const keyword = decodeURIComponent(highlight);
			
			// 获取要高亮的内容区域
			const contentArea = document.getElementById('md');
			if (!contentArea) return;
			
			// 存储包含关键字的行元素
			const highlightedLines = new Set();
			
			// 高亮函数
			function highlightText(element, keyword) {
				if (element.nodeType === Node.TEXT_NODE) {
					const text = element.textContent;
					const regex = new RegExp('(' + keyword.replace(/[.*+?^${}()|[\]\\]/g, '\\$&') + ')', 'gi');
					
					if (regex.test(text)) {
						const highlightedText = text.replace(regex, '<span class="highlight-keyword">$1</span>');
						const wrapper = document.createElement('div');
						wrapper.innerHTML = highlightedText;
						
						// 替换原文本节点
						const parent = element.parentNode;
						while (wrapper.firstChild) {
							parent.insertBefore(wrapper.firstChild, element);
						}
						parent.removeChild(element);
						
						// 找到包含此关键字的行级元素并标记
						markContainingLine(parent);
					}
				} else if (element.nodeType === Node.ELEMENT_NODE) {
					// 避免在已经高亮的元素和某些标签中进行高亮
					if (element.className && element.className.includes('highlight-keyword')) return;
					if (['SCRIPT', 'STYLE', 'CODE', 'PRE'].includes(element.tagName)) return;
					
					const children = Array.from(element.childNodes);
					children.forEach(child => highlightText(child, keyword));
				}
			}
			
			// 标记包含关键字的行
			function markContainingLine(element) {
				let currentElement = element;
				
				// 向上查找可能的行级元素
				while (currentElement && currentElement !== contentArea) {
					const tagName = currentElement.tagName;
					
					// 检查是否是行级元素
					if (tagName && (
						tagName === 'P' || 
						tagName === 'DIV' || 
						tagName === 'H1' || tagName === 'H2' || tagName === 'H3' || 
						tagName === 'H4' || tagName === 'H5' || tagName === 'H6' ||
						tagName === 'LI' ||
						tagName === 'BLOCKQUOTE' ||
						tagName === 'TD' || tagName === 'TH'
					)) {
						if (!highlightedLines.has(currentElement)) {
							currentElement.classList.add('highlight-line');
							highlightedLines.add(currentElement);
						}
						break;
					}
					
					currentElement = currentElement.parentNode;
				}
				
				// 如果没找到合适的行级元素，尝试包装当前元素
				if (!currentElement || currentElement === contentArea) {
					let lineElement = element;
					while (lineElement && lineElement.parentNode !== contentArea) {
						lineElement = lineElement.parentNode;
					}
					if (lineElement && !highlightedLines.has(lineElement)) {
						lineElement.classList.add('highlight-line');
						highlightedLines.add(lineElement);
					}
				}
			}
			
			// 执行高亮
			highlightText(contentArea, keyword);
		}
		
		// 页面加载完成后执行高亮
		document.addEventListener('DOMContentLoaded', function() {
			// 等待markdown渲染完成后再高亮
			setTimeout(highlightKeywords, 100);
		});
		
		// 监听markdown内容更新（如果有动态更新的话）
		const observer = new MutationObserver(function(mutations) {
			mutations.forEach(function(mutation) {
				if (mutation.type === 'childList' && mutation.target.id === 'md') {
					setTimeout(highlightKeywords, 50);
				}
			});
		});
		
		const mdElement = document.getElementById('md');
		if (mdElement) {
			observer.observe(mdElement, { childList: true, subtree: true });
		}
	</script>
</body>
</html>
